log4j.logger.com.preprocessing.edgeList=WARN, LOG_FILE

log4j.rootCategory=INFO, LOG_FILE

log4j.appender.LOG_FILE = org.apache.log4j.RollingFileAppender
log4j.appender.LOG_FILE.MaxBackupIndex=5
log4j.appender.LOG_FILE.MaxFileSize=100MB
log4j.appender.LOG_FILE.File = ./logs/spark/spark_application.log
log4j.appender.LOG_FILE.Append = true
log4j.appender.LOG_FILE.layout = org.apache.log4j.PatternLayout
log4j.appender.LOG_FILE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
log4j.logger.org.apache.spark.repl.Main=WARN

# Settings to quiet third party logs that are too verbose
log4j.logger.org.sparkproject.jetty=WARN
log4j.logger.org.sparkproject.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs
# in SparkSQL with Hive support
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

# Parquet related logging
log4j.logger.org.apache.parquet.CorruptStatistics=ERROR
log4j.logger.parquet.CorruptStatistics=ERROR